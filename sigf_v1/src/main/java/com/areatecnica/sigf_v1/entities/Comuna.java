package com.areatecnica.sigf_v1.entities;
// Generated 31-08-2016 4:14:02 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Comuna generated by hbm2java
 */
@Entity
@Table(name = "comuna", catalog = "sigf_v1"
)
public class Comuna implements java.io.Serializable {

    private Integer idComuna;
    private Region region;
    private String nombreComuna;
    private Set<Calle> calles = new HashSet<Calle>(0);
    private Set<Trabajador> trabajadors = new HashSet<Trabajador>(0);

    public Comuna() {
    }

    public Comuna(Region region, String nombreComuna) {
        this.region = region;
        this.nombreComuna = nombreComuna;
    }

    public Comuna(Region region, String nombreComuna, Set<Calle> calles, Set<Trabajador> trabajadors) {
        this.region = region;
        this.nombreComuna = nombreComuna;
        this.calles = calles;
        this.trabajadors = trabajadors;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id_comuna", unique = true, nullable = false)
    public Integer getIdComuna() {
        return this.idComuna;
    }

    public void setIdComuna(Integer idComuna) {
        this.idComuna = idComuna;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_region", nullable = false)
    public Region getRegion() {
        return this.region;
    }

    public void setRegion(Region region) {
        this.region = region;
    }

    @Column(name = "nombre_comuna", nullable = false, length = 45)
    public String getNombreComuna() {
        return this.nombreComuna;
    }

    public void setNombreComuna(String nombreComuna) {
        this.nombreComuna = nombreComuna;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "comuna")
    public Set<Calle> getCalles() {
        return this.calles;
    }

    public void setCalles(Set<Calle> calles) {
        this.calles = calles;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "comuna")
    public Set<Trabajador> getTrabajadors() {
        return this.trabajadors;
    }

    public void setTrabajadors(Set<Trabajador> trabajadors) {
        this.trabajadors = trabajadors;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (idComuna != null ? idComuna.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Comuna)) {
            return false;
        }
        Comuna other = (Comuna) object;
        if ((this.idComuna == null && other.idComuna != null) || (this.idComuna != null && !this.idComuna.equals(other.idComuna))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return nombreComuna;
    }

}
