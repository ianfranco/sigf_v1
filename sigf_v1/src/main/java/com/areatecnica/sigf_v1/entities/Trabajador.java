package com.areatecnica.sigf_v1.entities;
// Generated 31-08-2016 4:14:02 by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Trabajador generated by hbm2java
 */
@Entity
@Table(name = "trabajador", catalog = "sigf_v1", uniqueConstraints = @UniqueConstraint(columnNames = "rut_trabajador")
)
public class Trabajador implements java.io.Serializable {

    private Integer idTrabajador;
    private AsignacionFamiliar asignacionFamiliar;
    private Comuna comuna;
    private InstitucionApv institucionApv;
    private InstitucionPrevision institucionPrevision;
    private InstitucionSalud institucionSalud;
    private MonedaPactadaInstitucionSalud monedaPactadaInstitucionSalud;
    private TipoCotizacionTrabajador tipoCotizacionTrabajador;
    private Sindicato sindicato;
    private Terminal terminal;
    private int codigoTrabajador;
    private String rutTrabajador;
    private String nombreTrabajador;
    private String apellidoPaternoTrabajador;
    private String apellidoMaternoTrabajador;
    private Date fechaNacimientoTrabajador;
    private Boolean nacionalidad;
    private Boolean sexo;
    private Short estadoCivil;
    private Short fonasa;
    private String calleTrabajador;
    private String numeroDireccionTrabajador;
    private String telefonoFijoTrabajador;
    private String celularTrabajador;
    private String emailTrabajador;
    private Integer numeroCargas;
    private BigDecimal montoSalud;
    private Boolean formaPagoApv;
    private Integer montoApv;
    private Boolean subsidioJoven;
    private Boolean cesantia;
    private Boolean contratado;
    private Date fechaIngresoTrabajador;
    private Set<ObservacionTrabajador> observacionTrabajadors = new HashSet<ObservacionTrabajador>(0);
    private Set<LicenciaMedica> licenciaMedicas = new HashSet<LicenciaMedica>(0);
    private Set<Despacho> despachos = new HashSet<Despacho>(0);
    private Set<CentroCostoTrabajador> centroCostoTrabajadors = new HashSet<CentroCostoTrabajador>(0);
    private Set<RelacionLaboral> relacionLaborals = new HashSet<RelacionLaboral>(0);
    private Set<HaberTrabajadorLiquidacion> haberTrabajadorLiquidacions = new HashSet<HaberTrabajadorLiquidacion>(0);
    private Set<ReconocimientoDeuda> reconocimientoDeudas = new HashSet<ReconocimientoDeuda>(0);
    private Set<ControlAsistencia> controlAsistencias = new HashSet<ControlAsistencia>(0);
    private Set<HoraExtraTrabajador> horaExtraTrabajadors = new HashSet<HoraExtraTrabajador>(0);
    private Set<CargaTrabajador> cargaTrabajadors = new HashSet<CargaTrabajador>(0);
    private Set<FeriadoLegal> feriadoLegals = new HashSet<FeriadoLegal>(0);
    private Set<DescuentoTrabajadorLiquidacion> descuentoTrabajadorLiquidacions = new HashSet<DescuentoTrabajadorLiquidacion>(0);
    private Set<CargaRetroactiva> cargaRetroactivas = new HashSet<CargaRetroactiva>(0);
    private Set<FormaPagoTrabajador> formaPagoTrabajadors = new HashSet<FormaPagoTrabajador>(0);
    private Set<LiquidacionSueldo> liquidacionSueldos = new HashSet<LiquidacionSueldo>(0);
    private Set<CuentaBancariaTrabajador> cuentaBancariaTrabajadors = new HashSet<CuentaBancariaTrabajador>(0);
    private Set<Guia> guias = new HashSet<Guia>(0);
    private Set<JornadaTrabajador> jornadaTrabajadors = new HashSet<JornadaTrabajador>(0);
    private Set<DiaTrabajador> diaTrabajadors = new HashSet<DiaTrabajador>(0);
    private Set<TrabajadorTerminal> trabajadorTerminals = new HashSet<TrabajadorTerminal>(0);
    private Set<SindicatoTrabajador> sindicatoTrabajadors = new HashSet<SindicatoTrabajador>(0);
    private Set<AnticipoTrabajador> anticipoTrabajadors = new HashSet<AnticipoTrabajador>(0);
    
    private boolean poseeApv;

    public Trabajador() {
    }

    public Trabajador(boolean defecto) {
        this.nacionalidad = true;
        this.estadoCivil = 2;
        this.sexo = true;
        this.nombreTrabajador = " ";
        this.apellidoPaternoTrabajador = " ";
        this.apellidoMaternoTrabajador = " ";
    }

    public Trabajador(Terminal terminal, Sindicato sindicato, AsignacionFamiliar asignacionFamiliar, Comuna comuna, InstitucionApv institucionApv, InstitucionPrevision institucionPrevision, InstitucionSalud institucionSalud, MonedaPactadaInstitucionSalud monedaPactadaInstitucionSalud, TipoCotizacionTrabajador tipoCotizacionTrabajador, int codigoTrabajador, String rutTrabajador, String nombreTrabajador, String apellidoPaternoTrabajador, String apellidoMaternoTrabajador, Date fechaIngresoTrabajador) {
        this.terminal = terminal;
        this.sindicato = sindicato;
        this.asignacionFamiliar = asignacionFamiliar;
        this.comuna = comuna;
        this.institucionApv = institucionApv;
        this.institucionPrevision = institucionPrevision;
        this.institucionSalud = institucionSalud;
        this.monedaPactadaInstitucionSalud = monedaPactadaInstitucionSalud;
        this.tipoCotizacionTrabajador = tipoCotizacionTrabajador;
        this.codigoTrabajador = codigoTrabajador;
        this.rutTrabajador = rutTrabajador;
        this.nombreTrabajador = nombreTrabajador;
        this.apellidoPaternoTrabajador = apellidoPaternoTrabajador;
        this.apellidoMaternoTrabajador = apellidoMaternoTrabajador;
        this.fechaIngresoTrabajador = fechaIngresoTrabajador;
    }

    public Trabajador(Terminal terminal, Sindicato sindicato, AsignacionFamiliar asignacionFamiliar, Short fonasa, Comuna comuna, InstitucionApv institucionApv, InstitucionPrevision institucionPrevision, InstitucionSalud institucionSalud, MonedaPactadaInstitucionSalud monedaPactadaInstitucionSalud, TipoCotizacionTrabajador tipoCotizacionTrabajador, int codigoTrabajador, String rutTrabajador, String nombreTrabajador, String apellidoPaternoTrabajador, String apellidoMaternoTrabajador, Date fechaNacimientoTrabajador, Boolean nacionalidad, Boolean sexo, Short estadoCivil, String calleTrabajador, String numeroDireccionTrabajador, String telefonoFijoTrabajador, String celularTrabajador, String emailTrabajador, Integer numeroCargas, BigDecimal montoSalud, Boolean formaPagoApv, Integer montoApv, Boolean subsidioJoven, Boolean cesantia, Boolean contratado, Date fechaIngresoTrabajador, Set<ObservacionTrabajador> observacionTrabajadors, Set<LicenciaMedica> licenciaMedicas, Set<Despacho> despachos, Set<CentroCostoTrabajador> centroCostoTrabajadors, Set<RelacionLaboral> relacionLaborals, Set<HaberTrabajadorLiquidacion> haberTrabajadorLiquidacions, Set<ControlAsistencia> controlAsistencias, Set<HoraExtraTrabajador> horaExtraTrabajadors, Set<CargaTrabajador> cargaTrabajadors, Set<FeriadoLegal> feriadoLegals, Set<DescuentoTrabajadorLiquidacion> descuentoTrabajadorLiquidacions, Set<CargaRetroactiva> cargaRetroactivas, Set<FormaPagoTrabajador> formaPagoTrabajadors, Set<LiquidacionSueldo> liquidacionSueldos, Set<CuentaBancariaTrabajador> cuentaBancariaTrabajadors, Set<Guia> guias, Set<JornadaTrabajador> jornadaTrabajadors, Set<DiaTrabajador> diaTrabajadors, Set<TrabajadorTerminal> trabajadorTerminals, Set<SindicatoTrabajador> sindicatoTrabajadors, Set<AnticipoTrabajador> anticipoTrabajadors) {
        this.terminal = terminal;
        this.sindicato = sindicato;
        this.asignacionFamiliar = asignacionFamiliar;
        this.comuna = comuna;
        this.institucionApv = institucionApv;
        this.institucionPrevision = institucionPrevision;
        this.institucionSalud = institucionSalud;
        this.monedaPactadaInstitucionSalud = monedaPactadaInstitucionSalud;
        this.tipoCotizacionTrabajador = tipoCotizacionTrabajador;
        this.codigoTrabajador = codigoTrabajador;
        this.rutTrabajador = rutTrabajador;
        this.nombreTrabajador = nombreTrabajador;
        this.apellidoPaternoTrabajador = apellidoPaternoTrabajador;
        this.apellidoMaternoTrabajador = apellidoMaternoTrabajador;
        this.fechaNacimientoTrabajador = fechaNacimientoTrabajador;
        this.nacionalidad = nacionalidad;
        this.sexo = sexo;
        this.fonasa = fonasa;
        this.estadoCivil = estadoCivil;
        this.calleTrabajador = calleTrabajador;
        this.numeroDireccionTrabajador = numeroDireccionTrabajador;
        this.telefonoFijoTrabajador = telefonoFijoTrabajador;
        this.celularTrabajador = celularTrabajador;
        this.emailTrabajador = emailTrabajador;
        this.numeroCargas = numeroCargas;
        this.montoSalud = montoSalud;
        this.formaPagoApv = formaPagoApv;
        this.montoApv = montoApv;
        this.subsidioJoven = subsidioJoven;
        this.cesantia = cesantia;
        this.contratado = contratado;
        this.fechaIngresoTrabajador = fechaIngresoTrabajador;
        this.observacionTrabajadors = observacionTrabajadors;
        this.licenciaMedicas = licenciaMedicas;
        this.despachos = despachos;
        this.centroCostoTrabajadors = centroCostoTrabajadors;
        this.relacionLaborals = relacionLaborals;
        this.haberTrabajadorLiquidacions = haberTrabajadorLiquidacions;
        this.reconocimientoDeudas = reconocimientoDeudas;
        this.controlAsistencias = controlAsistencias;
        this.horaExtraTrabajadors = horaExtraTrabajadors;
        this.cargaTrabajadors = cargaTrabajadors;
        this.feriadoLegals = feriadoLegals;
        this.descuentoTrabajadorLiquidacions = descuentoTrabajadorLiquidacions;
        this.cargaRetroactivas = cargaRetroactivas;
        this.formaPagoTrabajadors = formaPagoTrabajadors;
        this.liquidacionSueldos = liquidacionSueldos;
        this.cuentaBancariaTrabajadors = cuentaBancariaTrabajadors;
        this.guias = guias;
        this.jornadaTrabajadors = jornadaTrabajadors;
        this.diaTrabajadors = diaTrabajadors;
        this.trabajadorTerminals = trabajadorTerminals;
        this.sindicatoTrabajadors = sindicatoTrabajadors;
        this.anticipoTrabajadors = anticipoTrabajadors;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id_trabajador", unique = true, nullable = false)
    public Integer getIdTrabajador() {
        return this.idTrabajador;
    }

    public void setIdTrabajador(Integer idTrabajador) {
        this.idTrabajador = idTrabajador;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_asignacion_familiar", nullable = false)
    public AsignacionFamiliar getAsignacionFamiliar() {
        return this.asignacionFamiliar;
    }

    public void setAsignacionFamiliar(AsignacionFamiliar asignacionFamiliar) {
        this.asignacionFamiliar = asignacionFamiliar;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_comuna", nullable = false)
    public Comuna getComuna() {
        return this.comuna;
    }

    public void setComuna(Comuna comuna) {
        this.comuna = comuna;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_institucion_apv", nullable = false)
    public InstitucionApv getInstitucionApv() {
        return this.institucionApv;
    }

    public void setInstitucionApv(InstitucionApv institucionApv) {
        this.institucionApv = institucionApv;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_institucion_prevision", nullable = false)
    public InstitucionPrevision getInstitucionPrevision() {
        return this.institucionPrevision;
    }

    public void setInstitucionPrevision(InstitucionPrevision institucionPrevision) {
        this.institucionPrevision = institucionPrevision;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_sindicato", nullable = false)
    public Sindicato getSindicato() {
        return this.sindicato;
    }

    public void setSindicato(Sindicato sindicato) {
        this.sindicato = sindicato;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_terminal", nullable = false)
    public Terminal getTerminal() {
        return this.terminal;
    }

    public void setTerminal(Terminal terminal) {
        this.terminal = terminal;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_institucion_salud", nullable = false)
    public InstitucionSalud getInstitucionSalud() {
        return this.institucionSalud;
    }

    public void setInstitucionSalud(InstitucionSalud institucionSalud) {
        this.institucionSalud = institucionSalud;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_moneda_pactada_salud", nullable = false)
    public MonedaPactadaInstitucionSalud getMonedaPactadaInstitucionSalud() {
        return this.monedaPactadaInstitucionSalud;
    }

    public void setMonedaPactadaInstitucionSalud(MonedaPactadaInstitucionSalud monedaPactadaInstitucionSalud) {
        this.monedaPactadaInstitucionSalud = monedaPactadaInstitucionSalud;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_tipo_cotizacion_trabajador", nullable = false)
    public TipoCotizacionTrabajador getTipoCotizacionTrabajador() {
        return this.tipoCotizacionTrabajador;
    }

    public void setTipoCotizacionTrabajador(TipoCotizacionTrabajador tipoCotizacionTrabajador) {
        this.tipoCotizacionTrabajador = tipoCotizacionTrabajador;
    }

    @Column(name = "codigo_trabajador", nullable = false)
    public int getCodigoTrabajador() {
        return this.codigoTrabajador;
    }

    public void setCodigoTrabajador(int codigoTrabajador) {
        this.codigoTrabajador = codigoTrabajador;
    }

    @Column(name = "rut_trabajador", unique = true, nullable = false, length = 9)
    public String getRutTrabajador() {
        return this.rutTrabajador;
    }

    public void setRutTrabajador(String rutTrabajador) {
        this.rutTrabajador = rutTrabajador;
    }

    @Column(name = "nombre_trabajador", nullable = false)
    public String getNombreTrabajador() {
        return this.nombreTrabajador;
    }

    public void setNombreTrabajador(String nombreTrabajador) {
        this.nombreTrabajador = nombreTrabajador;
    }

    @Column(name = "apellido_paterno_trabajador", nullable = false)
    public String getApellidoPaternoTrabajador() {
        return this.apellidoPaternoTrabajador;
    }

    public void setApellidoPaternoTrabajador(String apellidoPaternoTrabajador) {
        this.apellidoPaternoTrabajador = apellidoPaternoTrabajador;
    }

    @Column(name = "apellido_materno_trabajador", nullable = false)
    public String getApellidoMaternoTrabajador() {
        return this.apellidoMaternoTrabajador;
    }

    public void setApellidoMaternoTrabajador(String apellidoMaternoTrabajador) {
        this.apellidoMaternoTrabajador = apellidoMaternoTrabajador;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_nacimiento_trabajador", length = 10)
    public Date getFechaNacimientoTrabajador() {
        return this.fechaNacimientoTrabajador;
    }

    public void setFechaNacimientoTrabajador(Date fechaNacimientoTrabajador) {
        this.fechaNacimientoTrabajador = fechaNacimientoTrabajador;
    }

    @Column(name = "nacionalidad")
    public Boolean getNacionalidad() {
        return this.nacionalidad;
    }

    public void setNacionalidad(Boolean nacionalidad) {
        this.nacionalidad = nacionalidad;
    }

    @Column(name = "sexo")
    public Boolean getSexo() {
        return this.sexo;
    }

    public void setSexo(Boolean sexo) {
        this.sexo = sexo;
    }

    @Column(name = "estado_civil")
    public Short getEstadoCivil() {
        return this.estadoCivil;
    }

    public void setEstadoCivil(Short estadoCivil) {
        this.estadoCivil = estadoCivil;
    }

    @Column(name = "fonasa")
    public Short getFonasa() {
        return this.fonasa;
    }

    public void setFonasa(Short fonasa) {
        this.fonasa = fonasa;
    }

    @Column(name = "calle_trabajador")
    public String getCalleTrabajador() {
        return this.calleTrabajador;
    }

    public void setCalleTrabajador(String calleTrabajador) {
        this.calleTrabajador = calleTrabajador;
    }

    @Column(name = "numero_direccion_trabajador", length = 45)
    public String getNumeroDireccionTrabajador() {
        return this.numeroDireccionTrabajador;
    }

    public void setNumeroDireccionTrabajador(String numeroDireccionTrabajador) {
        this.numeroDireccionTrabajador = numeroDireccionTrabajador;
    }

    @Column(name = "telefono_fijo_trabajador")
    public String getTelefonoFijoTrabajador() {
        return this.telefonoFijoTrabajador;
    }

    public void setTelefonoFijoTrabajador(String telefonoFijoTrabajador) {
        this.telefonoFijoTrabajador = telefonoFijoTrabajador;
    }

    @Column(name = "celular_trabajador")
    public String getCelularTrabajador() {
        return this.celularTrabajador;
    }

    public void setCelularTrabajador(String celularTrabajador) {
        this.celularTrabajador = celularTrabajador;
    }

    @Column(name = "email_trabajador")
    public String getEmailTrabajador() {
        return this.emailTrabajador;
    }

    public void setEmailTrabajador(String emailTrabajador) {
        this.emailTrabajador = emailTrabajador;
    }

    @Column(name = "numero_cargas")
    public Integer getNumeroCargas() {
        return this.numeroCargas;
    }

    public void setNumeroCargas(Integer numeroCargas) {
        this.numeroCargas = numeroCargas;
    }

    @Column(name = "monto_salud", precision = 6)
    public BigDecimal getMontoSalud() {
        return this.montoSalud;
    }

    public void setMontoSalud(BigDecimal montoSalud) {
        this.montoSalud = montoSalud;
    }

    @Column(name = "forma_pago_apv")
    public Boolean getFormaPagoApv() {
        return this.formaPagoApv;
    }

    public void setFormaPagoApv(Boolean formaPagoApv) {
        this.formaPagoApv = formaPagoApv;
    }

    @Column(name = "monto_apv")
    public Integer getMontoApv() {
        return this.montoApv;
    }

    public void setMontoApv(Integer montoApv) {
        this.montoApv = montoApv;
    }

    @Column(name = "subsidio_joven")
    public Boolean getSubsidioJoven() {
        return this.subsidioJoven;
    }

    public void setSubsidioJoven(Boolean subsidioJoven) {
        this.subsidioJoven = subsidioJoven;
    }

    @Column(name = "cesantia")
    public Boolean getCesantia() {
        return this.cesantia;
    }

    public void setCesantia(Boolean cesantia) {
        this.cesantia = cesantia;
    }

    @Column(name = "contratado")
    public Boolean getContratado() {
        return this.contratado;
    }

    public void setContratado(Boolean contratado) {
        this.contratado = contratado;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha_ingreso_trabajador", nullable = false, length = 19)
    public Date getFechaIngresoTrabajador() {
        return this.fechaIngresoTrabajador;
    }

    public void setFechaIngresoTrabajador(Date fechaIngresoTrabajador) {
        this.fechaIngresoTrabajador = fechaIngresoTrabajador;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<ObservacionTrabajador> getObservacionTrabajadors() {
        return this.observacionTrabajadors;
    }

    public void setObservacionTrabajadors(Set<ObservacionTrabajador> observacionTrabajadors) {
        this.observacionTrabajadors = observacionTrabajadors;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<LicenciaMedica> getLicenciaMedicas() {
        return this.licenciaMedicas;
    }

    public void setLicenciaMedicas(Set<LicenciaMedica> licenciaMedicas) {
        this.licenciaMedicas = licenciaMedicas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<Despacho> getDespachos() {
        return this.despachos;
    }

    public void setDespachos(Set<Despacho> despachos) {
        this.despachos = despachos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<CentroCostoTrabajador> getCentroCostoTrabajadors() {
        return this.centroCostoTrabajadors;
    }

    public void setCentroCostoTrabajadors(Set<CentroCostoTrabajador> centroCostoTrabajadors) {
        this.centroCostoTrabajadors = centroCostoTrabajadors;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<RelacionLaboral> getRelacionLaborals() {
        return this.relacionLaborals;
    }

    public void setRelacionLaborals(Set<RelacionLaboral> relacionLaborals) {
        this.relacionLaborals = relacionLaborals;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<HaberTrabajadorLiquidacion> getHaberTrabajadorLiquidacions() {
        return this.haberTrabajadorLiquidacions;
    }

    public void setHaberTrabajadorLiquidacions(Set<HaberTrabajadorLiquidacion> haberTrabajadorLiquidacions) {
        this.haberTrabajadorLiquidacions = haberTrabajadorLiquidacions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<ReconocimientoDeuda> getReconocimientoDeudas() {
        return this.reconocimientoDeudas;
    }

    public void setReconocimientoDeudas(Set<ReconocimientoDeuda> reconocimientoDeudas) {
        this.reconocimientoDeudas = reconocimientoDeudas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<ControlAsistencia> getControlAsistencias() {
        return this.controlAsistencias;
    }

    public void setControlAsistencias(Set<ControlAsistencia> controlAsistencias) {
        this.controlAsistencias = controlAsistencias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<HoraExtraTrabajador> getHoraExtraTrabajadors() {
        return this.horaExtraTrabajadors;
    }

    public void setHoraExtraTrabajadors(Set<HoraExtraTrabajador> horaExtraTrabajadors) {
        this.horaExtraTrabajadors = horaExtraTrabajadors;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<CargaTrabajador> getCargaTrabajadors() {
        return this.cargaTrabajadors;
    }

    public void setCargaTrabajadors(Set<CargaTrabajador> cargaTrabajadors) {
        this.cargaTrabajadors = cargaTrabajadors;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<FeriadoLegal> getFeriadoLegals() {
        return this.feriadoLegals;
    }

    public void setFeriadoLegals(Set<FeriadoLegal> feriadoLegals) {
        this.feriadoLegals = feriadoLegals;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<DescuentoTrabajadorLiquidacion> getDescuentoTrabajadorLiquidacions() {
        return this.descuentoTrabajadorLiquidacions;
    }

    public void setDescuentoTrabajadorLiquidacions(Set<DescuentoTrabajadorLiquidacion> descuentoTrabajadorLiquidacions) {
        this.descuentoTrabajadorLiquidacions = descuentoTrabajadorLiquidacions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<CargaRetroactiva> getCargaRetroactivas() {
        return this.cargaRetroactivas;
    }

    public void setCargaRetroactivas(Set<CargaRetroactiva> cargaRetroactivas) {
        this.cargaRetroactivas = cargaRetroactivas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<FormaPagoTrabajador> getFormaPagoTrabajadors() {
        return this.formaPagoTrabajadors;
    }

    public void setFormaPagoTrabajadors(Set<FormaPagoTrabajador> formaPagoTrabajadors) {
        this.formaPagoTrabajadors = formaPagoTrabajadors;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<LiquidacionSueldo> getLiquidacionSueldos() {
        return this.liquidacionSueldos;
    }

    public void setLiquidacionSueldos(Set<LiquidacionSueldo> liquidacionSueldos) {
        this.liquidacionSueldos = liquidacionSueldos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<CuentaBancariaTrabajador> getCuentaBancariaTrabajadors() {
        return this.cuentaBancariaTrabajadors;
    }

    public void setCuentaBancariaTrabajadors(Set<CuentaBancariaTrabajador> cuentaBancariaTrabajadors) {
        this.cuentaBancariaTrabajadors = cuentaBancariaTrabajadors;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<Guia> getGuias() {
        return this.guias;
    }

    public void setGuias(Set<Guia> guias) {
        this.guias = guias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<JornadaTrabajador> getJornadaTrabajadors() {
        return this.jornadaTrabajadors;
    }

    public void setJornadaTrabajadors(Set<JornadaTrabajador> jornadaTrabajadors) {
        this.jornadaTrabajadors = jornadaTrabajadors;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<DiaTrabajador> getDiaTrabajadors() {
        return this.diaTrabajadors;
    }

    public void setDiaTrabajadors(Set<DiaTrabajador> diaTrabajadors) {
        this.diaTrabajadors = diaTrabajadors;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<TrabajadorTerminal> getTrabajadorTerminals() {
        return this.trabajadorTerminals;
    }

    public void setTrabajadorTerminals(Set<TrabajadorTerminal> trabajadorTerminals) {
        this.trabajadorTerminals = trabajadorTerminals;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<SindicatoTrabajador> getSindicatoTrabajadors() {
        return this.sindicatoTrabajadors;
    }

    public void setSindicatoTrabajadors(Set<SindicatoTrabajador> sindicatoTrabajadors) {
        this.sindicatoTrabajadors = sindicatoTrabajadors;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "trabajador")
    public Set<AnticipoTrabajador> getAnticipoTrabajadors() {
        return this.anticipoTrabajadors;
    }

    public void setAnticipoTrabajadors(Set<AnticipoTrabajador> anticipoTrabajadors) {
        this.anticipoTrabajadors = anticipoTrabajadors;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (idTrabajador != null ? idTrabajador.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Trabajador)) {
            return false;
        }
        Trabajador other = (Trabajador) object;
        if ((this.idTrabajador == null && other.idTrabajador != null) || (this.idTrabajador != null && !this.idTrabajador.equals(other.idTrabajador))) {
            return false;
        }
        return true;
    }

    public boolean getPoseeApv() {
        return poseeApv;
    }

    public void setPoseeApv(boolean poseeApv) {
        this.poseeApv = poseeApv;
    }

    @Override
    public String toString() {
        if (this.nombreTrabajador.equals("")) {
            this.nombreTrabajador = " ";
            this.apellidoPaternoTrabajador = " ";
            this.apellidoMaternoTrabajador = " ";
        }
        return apellidoPaternoTrabajador + " " + apellidoMaternoTrabajador + " " + nombreTrabajador;
    }

}
